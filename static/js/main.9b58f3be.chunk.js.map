{"version":3,"sources":["useFetchJobs.js","Job.js","JobPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","has_next_page","Job","job","useState","open","setOpen","console","log","Card","className","Body","Title","title","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","company","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamsChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","markdown","then","res","data","catch","err","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","e","param","target","prevParams","map","key","ReactDOM","render","document","getElementById"],"mappings":"kNAGMA,EACY,eADZA,EAEQ,WAFRA,EAGK,QAHLA,EAIoB,uBAY1B,SAASC,EAAQC,EAAOC,GACpB,OAAQA,EAAOC,MACX,KAAKJ,EACD,MAAO,CAAEK,SAAS,EAAMC,KAAM,IAElC,KAAKN,EACD,OAAO,2BAAKE,GAAZ,IAAmBG,SAAS,EAAOC,KAAMH,EAAOI,QAAQD,OAE5D,KAAKN,EACD,OAAO,2BACAE,GADP,IAEIG,SAAS,EACTG,MAAOL,EAAOI,QAAQC,MACtBF,KAAM,KAGd,KAAKN,EACD,OAAO,2BACAE,GADP,IAEIO,YAAaN,EAAOI,QAAQG,gBAGpC,QACI,OAAOR,G,kECcJS,EApDH,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACGC,oBAAS,GADZ,mBACdC,EADc,KACRC,EADQ,KAKrB,OAFAC,QAAQC,IAAI,OAAQH,GAGhB,kBAACI,EAAA,EAAD,CAAMC,UAAU,QACZ,kBAACD,EAAA,EAAKE,KAAN,KACI,yBAAKD,UAAU,kCACX,6BACI,kBAACD,EAAA,EAAKG,MAAN,KACKT,EAAIU,MADT,KACkB,IACd,0BAAMH,UAAU,kCAEpB,kBAACD,EAAA,EAAKK,SAAN,CAAeJ,UAAU,mBACpB,IAAIK,KAAKZ,EAAIa,YAAYC,sBAE9B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,YAAYT,UAAU,QAChCP,EAAIR,MAET,kBAACuB,EAAA,EAAD,CAAOC,QAAQ,aAAahB,EAAIiB,UAChC,yBAAKC,MAAO,CAAEC,UAAW,cACrB,kBAAC,IAAD,CACIC,OAAQpB,EAAIqB,iBAIxB,yBACId,UAAU,uBACVe,OAAO,KACPC,IAAKvB,EAAIwB,QACTC,IAAKzB,EAAI0B,gBAGjB,kBAACpB,EAAA,EAAKqB,KAAN,KACI,kBAACC,EAAA,EAAD,CACIZ,QAAQ,UACRa,QAAS,kBAAM1B,GAAQ,SAAC2B,GAAD,OAAeA,OAErC5B,EAAO,eAAiB,iBAGjC,kBAAC6B,EAAA,EAAD,CAAUC,GAAI9B,GACV,yBAAKK,UAAU,QACX,kBAAC,IAAD,CAAea,OAAQpB,EAAIiC,mB,SC7CpC,SAASC,EAAT,GAAyD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASvC,EAAe,EAAfA,YACpD,SAASwC,EAAWC,GAChBF,GAAQ,SAACG,GAAD,OAAcA,EAAWD,KAGrC,OACI,kBAACE,EAAA,EAAD,KACc,IAATL,GAAc,kBAACK,EAAA,EAAWC,KAAZ,CAAiBZ,QAAS,kBAAMQ,GAAY,MACjD,IAATF,GACG,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMO,EAAQ,KAAxC,KAEHD,EAAO,GAAK,kBAACK,EAAA,EAAWG,SAAZ,MACZR,EAAO,GACJ,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,GAAY,KACvCF,EAAO,GAGhB,kBAACK,EAAA,EAAWE,KAAZ,CAAiBE,QAAM,GAAET,GACxBtC,GACG,kBAAC2C,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,EAAW,KACtCF,EAAO,GAGftC,GAAe,kBAAC2C,EAAA,EAAWK,KAAZ,CAAiBhB,QAAS,kBAAMQ,EAAW,O,qBCiBxDS,EAxCI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eAC1B,OACI,kBAACC,EAAA,EAAD,CAAM1C,UAAU,QACZ,kBAAC0C,EAAA,EAAKC,IAAN,CAAU3C,UAAU,mBAChB,kBAAC0C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACZ,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CACIC,SAAUR,EACVS,MAAOV,EAAOd,YACdyB,KAAK,cACLlE,KAAK,UAIb,kBAACyD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACZ,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CACIC,SAAUR,EACVS,MAAOV,EAAO9B,SACdyC,KAAK,WACLlE,KAAK,UAIb,kBAACyD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKM,GAAG,OAAOpD,UAAU,QACrC,kBAAC0C,EAAA,EAAKW,MAAN,CACIJ,SAAUR,EACVS,MAAOV,EAAOc,UACdH,KAAK,YACLI,GAAG,YACHC,MAAM,iBACNvE,KAAK,WACLe,UAAU,aCenByD,EA3CH,WAAO,IAAD,EACc/D,mBAAS,IADvB,mBACP8C,EADO,KACCkB,EADD,OAEUhE,mBAAS,GAFnB,mBAEPkC,EAFO,KAEDC,EAFC,OJuCH,SAAsBW,EAAQZ,GAAO,IAAD,EACrB+B,qBAAW7E,EAAS,CAAEK,KAAM,GAAID,SAAS,IADpB,mBACxCH,EADwC,KACjC6E,EADiC,KA2D/C,OAtDAC,qBAAU,WACN,IAAMC,EAAeC,IAAMC,YAAYnD,SACvC+C,EAAS,CAAE3E,KAAMJ,IAEjBkF,IACKE,IAvCI,kBAuCU,CACXzB,OAAO,aAAG0B,UAAU,EAAMtC,KAAMA,GAASY,KAE5C2B,MAAK,SAACC,GACHR,EAAS,CACL3E,KAAMJ,EACNO,QAAS,CAAED,KAAMiF,EAAIC,WAG5BC,OAAM,SAACC,GACAR,IAAMS,SAASD,IACnBX,EAAS,CACL3E,KAAMJ,EACNO,QAAS,CAAEC,MAAOkF,QAI9B,IAAME,EAAeV,IAAMC,YAAYnD,SAqBvC,OApBAkD,IACKE,IA1DI,kBA0DU,CACXzB,OAAO,aAAG0B,UAAU,EAAMtC,KAAMA,EAAO,GAAMY,KAEhD2B,MAAK,SAACC,GACHR,EAAS,CACL3E,KAAMJ,EACNO,QAAS,CACLE,YAAiC,IAApB8E,EAAIC,KAAKK,aAIjCJ,OAAM,SAACC,GACAR,IAAMS,SAASD,IACnBX,EAAS,CACL3E,KAAMJ,EACNO,QAAS,CAAEC,MAAOkF,QAIvB,WACHT,EAAaa,SACbF,EAAaE,YAElB,CAACnC,EAAQZ,IAOL7C,EI/FuC6F,CAAapC,EAAQZ,GAA3DzC,EAHM,EAGNA,KAAMD,EAHA,EAGAA,QAASG,EAHT,EAGSA,MAAOC,EAHhB,EAGgBA,YAY9B,OACI,kBAACuF,EAAA,EAAD,CAAW7E,UAAU,QACjB,wBAAIA,UAAU,QAAd,eAEA,kBAAC,EAAD,CAAYwC,OAAQA,EAAQC,eAdT,SAACqC,GACxB,IAAMC,EAAQD,EAAEE,OAAO7B,KACjBD,EAAQ4B,EAAEE,OAAO9B,MAEvBrB,EAAQ,GACR6B,GAAU,SAACuB,GACP,OAAO,2BAAKA,GAAZ,kBAAyBF,EAAQ7B,UAUjC,kBAAC,EAAD,CACItB,KAAMA,EACNC,QAASA,EACTvC,YAAaA,IAGhBJ,GAAW,0CACXG,GAAS,wDAETF,EAAK+F,KAAI,SAACzF,GAAD,OACN,kBAAC,EAAD,CAAK0F,IAAK1F,EAAI8D,GAAI9D,IAAKA,OAG3B,kBAAC,EAAD,CACImC,KAAMA,EACNC,QAASA,EACTvC,YAAaA,M,OCvC7B8F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9b58f3be.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: 'make-request',\r\n    GET_DATA: 'get-data',\r\n    ERROR: 'error',\r\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page',\r\n}\r\n\r\n// const BASE_URL =\r\n// 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\r\n\r\n// const BASE_URL =\r\n//     'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\r\n\r\n// https://nl.hideproxy.me/go.php?u=bcGhZ6qwJbPtPTfACIOsupeqe%2FwRO1nf5lrNGvHdivcSDQ%3D%3D&b=5\r\nconst BASE_URL = '/positions.json'\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return { loading: true, jobs: [] }\r\n\r\n        case ACTIONS.GET_DATA:\r\n            return { ...state, loading: false, jobs: action.payload.jobs }\r\n\r\n        case ACTIONS.ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n                jobs: [],\r\n            }\r\n\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                hasNextPage: action.payload.has_next_page,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\r\n\r\n    // alert('useFetchJobs')\r\n\r\n    useEffect(() => {\r\n        const cancelToken1 = axios.CancelToken.source()\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST })\r\n\r\n        axios\r\n            .get(BASE_URL, {\r\n                params: { markdown: true, page: page, ...params },\r\n            })\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ACTIONS.GET_DATA,\r\n                    payload: { jobs: res.data },\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                if (axios.isCancel(err)) return\r\n                dispatch({\r\n                    type: ACTIONS.ERROR,\r\n                    payload: { error: err },\r\n                })\r\n            })\r\n\r\n        const cancelToken2 = axios.CancelToken.source()\r\n        axios\r\n            .get(BASE_URL, {\r\n                params: { markdown: true, page: page + 1, ...params },\r\n            })\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\r\n                    payload: {\r\n                        hasNextPage: res.data.length !== 0,\r\n                    },\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                if (axios.isCancel(err)) return\r\n                dispatch({\r\n                    type: ACTIONS.ERROR,\r\n                    payload: { error: err },\r\n                })\r\n            })\r\n\r\n        return () => {\r\n            cancelToken1.cancel()\r\n            cancelToken2.cancel()\r\n        }\r\n    }, [params, page])\r\n\r\n    // return {\r\n    //     jobs: [1, 2, 3],\r\n    //     loading: false,\r\n    //     error: true,\r\n    // }\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst Job = ({ job }) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    console.log('open', open)\r\n\r\n    return (\r\n        <Card className=\"mb-3\">\r\n            <Card.Body>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} -{' '}\r\n                            <span className=\"text-muted font-weight-light\"></span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className=\"text-muted mb-2\">\r\n                            {new Date(job.created_at).toLocaleDateString()}\r\n                        </Card.Subtitle>\r\n                        <Badge variant=\"secondary\" className=\"mr-2\">\r\n                            {job.type}\r\n                        </Badge>\r\n                        <Badge variant=\"secondary\">{job.location}</Badge>\r\n                        <div style={{ wordBreak: 'break-all' }}>\r\n                            <ReactMarkdown\r\n                                source={job.how_to_apply}\r\n                            ></ReactMarkdown>\r\n                        </div>\r\n                    </div>\r\n                    <img\r\n                        className=\"d-sm-none d-md-block\"\r\n                        height=\"50\"\r\n                        alt={job.company}\r\n                        src={job.company_logo}\r\n                    />\r\n                </div>\r\n                <Card.Text>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n                    >\r\n                        {open ? 'Hide Details' : 'View Details'}\r\n                    </Button>\r\n                </Card.Text>\r\n                <Collapse in={open}>\r\n                    <div className=\"mt-4\">\r\n                        <ReactMarkdown source={job.description}></ReactMarkdown>\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n    function adjustPage(amount) {\r\n        setPage((prevPage) => prevPage + amount)\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n            {page !== 1 && (\r\n                <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n            )}\r\n            {page > 2 && <Pagination.Ellipsis />}\r\n            {page > 2 && (\r\n                <Pagination.Item onClick={() => adjustPage(-1)}>\r\n                    {page - 1}\r\n                </Pagination.Item>\r\n            )}\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n            {hasNextPage && (\r\n                <Pagination.Item onClick={() => adjustPage(1)}>\r\n                    {page + 1}\r\n                </Pagination.Item>\r\n            )}\r\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n        </Pagination>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nconst SearchForm = ({ params, onParamsChange }) => {\r\n    return (\r\n        <Form className=\"mb-4\">\r\n            <Form.Row className=\"align-items-end\">\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        onChange={onParamsChange}\r\n                        value={params.description}\r\n                        name=\"description\"\r\n                        type=\"text\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control\r\n                        onChange={onParamsChange}\r\n                        value={params.location}\r\n                        name=\"location\"\r\n                        type=\"text\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n                    <Form.Check\r\n                        onChange={onParamsChange}\r\n                        value={params.full_time}\r\n                        name=\"full_time\"\r\n                        id=\"full_time\"\r\n                        label=\"Only Full Time\"\r\n                        type=\"checkbox\"\r\n                        className=\"mb-2\"\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { useState } from 'react'\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport Job from './Job'\nimport JobPagination from './JobPagination'\nimport SearchForm from './SearchForm'\n\nconst App = () => {\n    const [params, setParams] = useState({})\n    const [page, setPage] = useState(1)\n    const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n    const handleParamsChange = (e) => {\n        const param = e.target.name\n        const value = e.target.value\n\n        setPage(1)\n        setParams((prevParams) => {\n            return { ...prevParams, [param]: value }\n        })\n    }\n\n    return (\n        <Container className=\"my-4\">\n            <h1 className=\"mb-4\">Github Jobs</h1>\n\n            <SearchForm params={params} onParamsChange={handleParamsChange} />\n\n            <JobPagination\n                page={page}\n                setPage={setPage}\n                hasNextPage={hasNextPage}\n            ></JobPagination>\n\n            {loading && <h1>Loading...</h1>}\n            {error && <h1>Error. Try Refreshing...</h1>}\n\n            {jobs.map((job) => (\n                <Job key={job.id} job={job}></Job>\n            ))}\n\n            <JobPagination\n                page={page}\n                setPage={setPage}\n                hasNextPage={hasNextPage}\n            ></JobPagination>\n        </Container>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}